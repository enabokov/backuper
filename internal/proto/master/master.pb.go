// Code generated by protoc-gen-go. DO NOT EDIT.
// source: master.proto

package master

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Query struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{0}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

type QueryTablesByMinion struct {
	MinionIP             string   `protobuf:"bytes,1,opt,name=minionIP,proto3" json:"minionIP,omitempty"`
	MinionPort           int64    `protobuf:"varint,2,opt,name=minionPort,proto3" json:"minionPort,omitempty"`
	Db                   string   `protobuf:"bytes,3,opt,name=db,proto3" json:"db,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryTablesByMinion) Reset()         { *m = QueryTablesByMinion{} }
func (m *QueryTablesByMinion) String() string { return proto.CompactTextString(m) }
func (*QueryTablesByMinion) ProtoMessage()    {}
func (*QueryTablesByMinion) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{1}
}

func (m *QueryTablesByMinion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryTablesByMinion.Unmarshal(m, b)
}
func (m *QueryTablesByMinion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryTablesByMinion.Marshal(b, m, deterministic)
}
func (m *QueryTablesByMinion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTablesByMinion.Merge(m, src)
}
func (m *QueryTablesByMinion) XXX_Size() int {
	return xxx_messageInfo_QueryTablesByMinion.Size(m)
}
func (m *QueryTablesByMinion) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTablesByMinion.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTablesByMinion proto.InternalMessageInfo

func (m *QueryTablesByMinion) GetMinionIP() string {
	if m != nil {
		return m.MinionIP
	}
	return ""
}

func (m *QueryTablesByMinion) GetMinionPort() int64 {
	if m != nil {
		return m.MinionPort
	}
	return 0
}

func (m *QueryTablesByMinion) GetDb() string {
	if m != nil {
		return m.Db
	}
	return ""
}

type QueryBackupsByMinion struct {
	MinionIP             string   `protobuf:"bytes,1,opt,name=minionIP,proto3" json:"minionIP,omitempty"`
	MinionPort           int64    `protobuf:"varint,2,opt,name=minionPort,proto3" json:"minionPort,omitempty"`
	Db                   string   `protobuf:"bytes,3,opt,name=db,proto3" json:"db,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryBackupsByMinion) Reset()         { *m = QueryBackupsByMinion{} }
func (m *QueryBackupsByMinion) String() string { return proto.CompactTextString(m) }
func (*QueryBackupsByMinion) ProtoMessage()    {}
func (*QueryBackupsByMinion) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{2}
}

func (m *QueryBackupsByMinion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryBackupsByMinion.Unmarshal(m, b)
}
func (m *QueryBackupsByMinion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryBackupsByMinion.Marshal(b, m, deterministic)
}
func (m *QueryBackupsByMinion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryBackupsByMinion.Merge(m, src)
}
func (m *QueryBackupsByMinion) XXX_Size() int {
	return xxx_messageInfo_QueryBackupsByMinion.Size(m)
}
func (m *QueryBackupsByMinion) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryBackupsByMinion.DiscardUnknown(m)
}

var xxx_messageInfo_QueryBackupsByMinion proto.InternalMessageInfo

func (m *QueryBackupsByMinion) GetMinionIP() string {
	if m != nil {
		return m.MinionIP
	}
	return ""
}

func (m *QueryBackupsByMinion) GetMinionPort() int64 {
	if m != nil {
		return m.MinionPort
	}
	return 0
}

func (m *QueryBackupsByMinion) GetDb() string {
	if m != nil {
		return m.Db
	}
	return ""
}

type QueryBackup struct {
	MinionIP             string   `protobuf:"bytes,1,opt,name=minionIP,proto3" json:"minionIP,omitempty"`
	MinionPort           int64    `protobuf:"varint,2,opt,name=minionPort,proto3" json:"minionPort,omitempty"`
	Db                   string   `protobuf:"bytes,3,opt,name=db,proto3" json:"db,omitempty"`
	Namespace            string   `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Table                string   `protobuf:"bytes,5,opt,name=table,proto3" json:"table,omitempty"`
	Timestamp            string   `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryBackup) Reset()         { *m = QueryBackup{} }
func (m *QueryBackup) String() string { return proto.CompactTextString(m) }
func (*QueryBackup) ProtoMessage()    {}
func (*QueryBackup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{3}
}

func (m *QueryBackup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryBackup.Unmarshal(m, b)
}
func (m *QueryBackup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryBackup.Marshal(b, m, deterministic)
}
func (m *QueryBackup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryBackup.Merge(m, src)
}
func (m *QueryBackup) XXX_Size() int {
	return xxx_messageInfo_QueryBackup.Size(m)
}
func (m *QueryBackup) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryBackup.DiscardUnknown(m)
}

var xxx_messageInfo_QueryBackup proto.InternalMessageInfo

func (m *QueryBackup) GetMinionIP() string {
	if m != nil {
		return m.MinionIP
	}
	return ""
}

func (m *QueryBackup) GetMinionPort() int64 {
	if m != nil {
		return m.MinionPort
	}
	return 0
}

func (m *QueryBackup) GetDb() string {
	if m != nil {
		return m.Db
	}
	return ""
}

func (m *QueryBackup) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *QueryBackup) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *QueryBackup) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

type QueryBackupUnit struct {
	MinionIP             string      `protobuf:"bytes,1,opt,name=minionIP,proto3" json:"minionIP,omitempty"`
	MinionPort           int64       `protobuf:"varint,2,opt,name=minionPort,proto3" json:"minionPort,omitempty"`
	Db                   string      `protobuf:"bytes,3,opt,name=db,proto3" json:"db,omitempty"`
	Unit                 *BackupUnit `protobuf:"bytes,4,opt,name=unit,proto3" json:"unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *QueryBackupUnit) Reset()         { *m = QueryBackupUnit{} }
func (m *QueryBackupUnit) String() string { return proto.CompactTextString(m) }
func (*QueryBackupUnit) ProtoMessage()    {}
func (*QueryBackupUnit) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{4}
}

func (m *QueryBackupUnit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryBackupUnit.Unmarshal(m, b)
}
func (m *QueryBackupUnit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryBackupUnit.Marshal(b, m, deterministic)
}
func (m *QueryBackupUnit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryBackupUnit.Merge(m, src)
}
func (m *QueryBackupUnit) XXX_Size() int {
	return xxx_messageInfo_QueryBackupUnit.Size(m)
}
func (m *QueryBackupUnit) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryBackupUnit.DiscardUnknown(m)
}

var xxx_messageInfo_QueryBackupUnit proto.InternalMessageInfo

func (m *QueryBackupUnit) GetMinionIP() string {
	if m != nil {
		return m.MinionIP
	}
	return ""
}

func (m *QueryBackupUnit) GetMinionPort() int64 {
	if m != nil {
		return m.MinionPort
	}
	return 0
}

func (m *QueryBackupUnit) GetDb() string {
	if m != nil {
		return m.Db
	}
	return ""
}

func (m *QueryBackupUnit) GetUnit() *BackupUnit {
	if m != nil {
		return m.Unit
	}
	return nil
}

type MinionInfo struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	LocalTime            string   `protobuf:"bytes,2,opt,name=localTime,proto3" json:"localTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MinionInfo) Reset()         { *m = MinionInfo{} }
func (m *MinionInfo) String() string { return proto.CompactTextString(m) }
func (*MinionInfo) ProtoMessage()    {}
func (*MinionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{5}
}

func (m *MinionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MinionInfo.Unmarshal(m, b)
}
func (m *MinionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MinionInfo.Marshal(b, m, deterministic)
}
func (m *MinionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MinionInfo.Merge(m, src)
}
func (m *MinionInfo) XXX_Size() int {
	return xxx_messageInfo_MinionInfo.Size(m)
}
func (m *MinionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MinionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MinionInfo proto.InternalMessageInfo

func (m *MinionInfo) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *MinionInfo) GetLocalTime() string {
	if m != nil {
		return m.LocalTime
	}
	return ""
}

type Response struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Timestamp            string   `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{6}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *Response) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

type ListTableResponse struct {
	Tables               []*ListTableResponse_TableUnit `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ListTableResponse) Reset()         { *m = ListTableResponse{} }
func (m *ListTableResponse) String() string { return proto.CompactTextString(m) }
func (*ListTableResponse) ProtoMessage()    {}
func (*ListTableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{7}
}

func (m *ListTableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTableResponse.Unmarshal(m, b)
}
func (m *ListTableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTableResponse.Marshal(b, m, deterministic)
}
func (m *ListTableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTableResponse.Merge(m, src)
}
func (m *ListTableResponse) XXX_Size() int {
	return xxx_messageInfo_ListTableResponse.Size(m)
}
func (m *ListTableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTableResponse proto.InternalMessageInfo

func (m *ListTableResponse) GetTables() []*ListTableResponse_TableUnit {
	if m != nil {
		return m.Tables
	}
	return nil
}

type ListTableResponse_TableUnit struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	LastBackup           string   `protobuf:"bytes,3,opt,name=LastBackup,proto3" json:"LastBackup,omitempty"`
	ScheduledAt          string   `protobuf:"bytes,4,opt,name=ScheduledAt,proto3" json:"ScheduledAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTableResponse_TableUnit) Reset()         { *m = ListTableResponse_TableUnit{} }
func (m *ListTableResponse_TableUnit) String() string { return proto.CompactTextString(m) }
func (*ListTableResponse_TableUnit) ProtoMessage()    {}
func (*ListTableResponse_TableUnit) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{7, 0}
}

func (m *ListTableResponse_TableUnit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTableResponse_TableUnit.Unmarshal(m, b)
}
func (m *ListTableResponse_TableUnit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTableResponse_TableUnit.Marshal(b, m, deterministic)
}
func (m *ListTableResponse_TableUnit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTableResponse_TableUnit.Merge(m, src)
}
func (m *ListTableResponse_TableUnit) XXX_Size() int {
	return xxx_messageInfo_ListTableResponse_TableUnit.Size(m)
}
func (m *ListTableResponse_TableUnit) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTableResponse_TableUnit.DiscardUnknown(m)
}

var xxx_messageInfo_ListTableResponse_TableUnit proto.InternalMessageInfo

func (m *ListTableResponse_TableUnit) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ListTableResponse_TableUnit) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListTableResponse_TableUnit) GetLastBackup() string {
	if m != nil {
		return m.LastBackup
	}
	return ""
}

func (m *ListTableResponse_TableUnit) GetScheduledAt() string {
	if m != nil {
		return m.ScheduledAt
	}
	return ""
}

type BackupUnit struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	Table                string   `protobuf:"bytes,2,opt,name=Table,proto3" json:"Table,omitempty"`
	Timestamp            string   `protobuf:"bytes,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupUnit) Reset()         { *m = BackupUnit{} }
func (m *BackupUnit) String() string { return proto.CompactTextString(m) }
func (*BackupUnit) ProtoMessage()    {}
func (*BackupUnit) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{8}
}

func (m *BackupUnit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupUnit.Unmarshal(m, b)
}
func (m *BackupUnit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupUnit.Marshal(b, m, deterministic)
}
func (m *BackupUnit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupUnit.Merge(m, src)
}
func (m *BackupUnit) XXX_Size() int {
	return xxx_messageInfo_BackupUnit.Size(m)
}
func (m *BackupUnit) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupUnit.DiscardUnknown(m)
}

var xxx_messageInfo_BackupUnit proto.InternalMessageInfo

func (m *BackupUnit) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *BackupUnit) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *BackupUnit) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

type ListBackupResponse struct {
	Backups              []*BackupUnit `protobuf:"bytes,1,rep,name=backups,proto3" json:"backups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListBackupResponse) Reset()         { *m = ListBackupResponse{} }
func (m *ListBackupResponse) String() string { return proto.CompactTextString(m) }
func (*ListBackupResponse) ProtoMessage()    {}
func (*ListBackupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{9}
}

func (m *ListBackupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBackupResponse.Unmarshal(m, b)
}
func (m *ListBackupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBackupResponse.Marshal(b, m, deterministic)
}
func (m *ListBackupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBackupResponse.Merge(m, src)
}
func (m *ListBackupResponse) XXX_Size() int {
	return xxx_messageInfo_ListBackupResponse.Size(m)
}
func (m *ListBackupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBackupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBackupResponse proto.InternalMessageInfo

func (m *ListBackupResponse) GetBackups() []*BackupUnit {
	if m != nil {
		return m.Backups
	}
	return nil
}

type ListMinions struct {
	Unit                 []*ListMinions_MinionUnit `protobuf:"bytes,1,rep,name=unit,proto3" json:"unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ListMinions) Reset()         { *m = ListMinions{} }
func (m *ListMinions) String() string { return proto.CompactTextString(m) }
func (*ListMinions) ProtoMessage()    {}
func (*ListMinions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{10}
}

func (m *ListMinions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMinions.Unmarshal(m, b)
}
func (m *ListMinions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMinions.Marshal(b, m, deterministic)
}
func (m *ListMinions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMinions.Merge(m, src)
}
func (m *ListMinions) XXX_Size() int {
	return xxx_messageInfo_ListMinions.Size(m)
}
func (m *ListMinions) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMinions.DiscardUnknown(m)
}

var xxx_messageInfo_ListMinions proto.InternalMessageInfo

func (m *ListMinions) GetUnit() []*ListMinions_MinionUnit {
	if m != nil {
		return m.Unit
	}
	return nil
}

type ListMinions_MinionUnit struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Time                 string   `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	IsActive             bool     `protobuf:"varint,3,opt,name=isActive,proto3" json:"isActive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMinions_MinionUnit) Reset()         { *m = ListMinions_MinionUnit{} }
func (m *ListMinions_MinionUnit) String() string { return proto.CompactTextString(m) }
func (*ListMinions_MinionUnit) ProtoMessage()    {}
func (*ListMinions_MinionUnit) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{10, 0}
}

func (m *ListMinions_MinionUnit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMinions_MinionUnit.Unmarshal(m, b)
}
func (m *ListMinions_MinionUnit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMinions_MinionUnit.Marshal(b, m, deterministic)
}
func (m *ListMinions_MinionUnit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMinions_MinionUnit.Merge(m, src)
}
func (m *ListMinions_MinionUnit) XXX_Size() int {
	return xxx_messageInfo_ListMinions_MinionUnit.Size(m)
}
func (m *ListMinions_MinionUnit) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMinions_MinionUnit.DiscardUnknown(m)
}

var xxx_messageInfo_ListMinions_MinionUnit proto.InternalMessageInfo

func (m *ListMinions_MinionUnit) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ListMinions_MinionUnit) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *ListMinions_MinionUnit) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func init() {
	proto.RegisterType((*Query)(nil), "master.Query")
	proto.RegisterType((*QueryTablesByMinion)(nil), "master.QueryTablesByMinion")
	proto.RegisterType((*QueryBackupsByMinion)(nil), "master.QueryBackupsByMinion")
	proto.RegisterType((*QueryBackup)(nil), "master.QueryBackup")
	proto.RegisterType((*QueryBackupUnit)(nil), "master.QueryBackupUnit")
	proto.RegisterType((*MinionInfo)(nil), "master.MinionInfo")
	proto.RegisterType((*Response)(nil), "master.Response")
	proto.RegisterType((*ListTableResponse)(nil), "master.ListTableResponse")
	proto.RegisterType((*ListTableResponse_TableUnit)(nil), "master.ListTableResponse.TableUnit")
	proto.RegisterType((*BackupUnit)(nil), "master.BackupUnit")
	proto.RegisterType((*ListBackupResponse)(nil), "master.ListBackupResponse")
	proto.RegisterType((*ListMinions)(nil), "master.ListMinions")
	proto.RegisterType((*ListMinions_MinionUnit)(nil), "master.ListMinions.MinionUnit")
}

func init() { proto.RegisterFile("master.proto", fileDescriptor_f9c348dec43a6705) }

var fileDescriptor_f9c348dec43a6705 = []byte{
	// 612 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xcd, 0x8e, 0x12, 0x41,
	0x10, 0x66, 0xf8, 0x5b, 0x28, 0x5c, 0x65, 0x1b, 0xd4, 0x71, 0xdc, 0x6c, 0x48, 0x9b, 0x18, 0x0e,
	0x86, 0x03, 0x1b, 0x2f, 0x9a, 0xa8, 0x70, 0x41, 0x92, 0xc5, 0xe0, 0xc8, 0x5e, 0x4d, 0x7a, 0xa0,
	0x75, 0x27, 0xce, 0x5f, 0xe8, 0xc6, 0x64, 0x4f, 0x9e, 0x7c, 0x02, 0x1f, 0xc3, 0xa7, 0xf1, 0xec,
	0xcb, 0x98, 0xae, 0xee, 0xf9, 0x01, 0x47, 0x0f, 0x66, 0x3d, 0x51, 0x55, 0xdd, 0x55, 0xf5, 0xd5,
	0x57, 0xdf, 0x34, 0x70, 0x2b, 0x64, 0x42, 0xf2, 0xed, 0x28, 0xd9, 0xc6, 0x32, 0x26, 0x4d, 0xed,
	0xd1, 0x23, 0x68, 0xbc, 0xdd, 0xf1, 0xed, 0x35, 0x65, 0xd0, 0x43, 0x63, 0xc5, 0xbc, 0x80, 0x8b,
	0xe9, 0xf5, 0xc2, 0x8f, 0xfc, 0x38, 0x22, 0x0e, 0xb4, 0x42, 0xb4, 0xe6, 0x4b, 0xdb, 0x1a, 0x58,
	0xc3, 0xb6, 0x9b, 0xf9, 0xe4, 0x0c, 0x40, 0xdb, 0xcb, 0x78, 0x2b, 0xed, 0xea, 0xc0, 0x1a, 0xd6,
	0xdc, 0x42, 0x84, 0xdc, 0x86, 0xea, 0xc6, 0xb3, 0x6b, 0x98, 0x55, 0xdd, 0x78, 0xd4, 0x83, 0x3e,
	0xb6, 0x98, 0xb2, 0xf5, 0xa7, 0x5d, 0xf2, 0x7f, 0x7a, 0x7c, 0xb7, 0xa0, 0x53, 0x68, 0x72, 0x93,
	0xb5, 0xc9, 0x29, 0xb4, 0x23, 0x16, 0x72, 0x91, 0xb0, 0x35, 0xb7, 0xeb, 0x18, 0xce, 0x03, 0xa4,
	0x0f, 0x0d, 0xa9, 0xb8, 0xb3, 0x1b, 0x78, 0xa2, 0x1d, 0x95, 0x23, 0xfd, 0x90, 0x0b, 0xc9, 0xc2,
	0xc4, 0x6e, 0xea, 0x9c, 0x2c, 0x40, 0xbf, 0x5a, 0x70, 0xa7, 0x80, 0xf6, 0x32, 0xf2, 0xe5, 0x8d,
	0x22, 0x7e, 0x0c, 0xf5, 0x5d, 0xe4, 0x4b, 0x04, 0xdb, 0x19, 0x93, 0x91, 0x91, 0x40, 0xde, 0xcd,
	0xc5, 0x73, 0xfa, 0x02, 0x40, 0xef, 0x62, 0x1e, 0x7d, 0x88, 0x09, 0x81, 0xfa, 0x55, 0x2c, 0xa4,
	0xe9, 0x8e, 0xb6, 0x9a, 0x23, 0x88, 0xd7, 0x2c, 0x58, 0xf9, 0x21, 0xc7, 0xc6, 0x6d, 0x37, 0x0f,
	0xd0, 0x67, 0xd0, 0x72, 0xb9, 0x48, 0xe2, 0x48, 0x70, 0xd2, 0x85, 0x5a, 0x28, 0x3e, 0x9a, 0x64,
	0x65, 0xee, 0x73, 0x50, 0x3d, 0xe4, 0xe0, 0x87, 0x05, 0x27, 0x17, 0xbe, 0x90, 0x28, 0xbc, 0xac,
	0xca, 0x73, 0x68, 0x22, 0x81, 0xc2, 0xb6, 0x06, 0xb5, 0x61, 0x67, 0xfc, 0x28, 0xc5, 0xfe, 0xdb,
	0xd5, 0x11, 0x7a, 0x38, 0x8c, 0x49, 0x71, 0xbe, 0x40, 0x3b, 0x0b, 0xaa, 0xee, 0x6f, 0xb2, 0xad,
	0x69, 0x54, 0x79, 0x40, 0xcd, 0xaa, 0x1c, 0x03, 0x0b, 0x6d, 0xc5, 0xf2, 0x05, 0x13, 0x52, 0xb3,
	0x64, 0xd8, 0x2c, 0x44, 0xc8, 0x00, 0x3a, 0xef, 0xd6, 0x57, 0x7c, 0xb3, 0x0b, 0xf8, 0x66, 0x22,
	0x8d, 0x12, 0x8a, 0x21, 0xfa, 0x1e, 0xa0, 0xb0, 0xd1, 0xbf, 0x23, 0xe8, 0x43, 0x03, 0xc1, 0x1a,
	0x08, 0xda, 0x51, 0x39, 0xab, 0x8c, 0x33, 0x0d, 0x21, 0x0f, 0xd0, 0x29, 0x10, 0xc5, 0x83, 0xee,
	0x91, 0x71, 0xf6, 0x04, 0x8e, 0x3c, 0xfd, 0x69, 0x19, 0xd2, 0xca, 0x16, 0x9e, 0x5e, 0xa1, 0xdf,
	0x2c, 0xe8, 0xa8, 0x22, 0x7a, 0xf1, 0x82, 0x8c, 0x8d, 0x56, 0x74, 0xea, 0x59, 0x91, 0x6f, 0x73,
	0x65, 0xa4, 0x7f, 0x73, 0xdd, 0x38, 0xcb, 0x54, 0x37, 0x38, 0x67, 0x99, 0x6e, 0x08, 0xd4, 0x65,
	0x2e, 0x19, 0xb4, 0x95, 0xc2, 0x7d, 0x31, 0x59, 0x4b, 0xff, 0x33, 0xc7, 0xd1, 0x5a, 0x6e, 0xe6,
	0x8f, 0x7f, 0xd6, 0xa0, 0xb9, 0xc0, 0xce, 0xe4, 0x1c, 0xda, 0xaf, 0x39, 0xdb, 0x4a, 0x8f, 0x33,
	0x49, 0xb2, 0x51, 0x72, 0x9d, 0x3a, 0xdd, 0x34, 0x96, 0x32, 0x40, 0x2b, 0xe4, 0x29, 0x1c, 0xcf,
	0xb8, 0x9c, 0x04, 0x41, 0x3a, 0xd6, 0x71, 0x7a, 0x09, 0xbf, 0x33, 0xa7, 0x57, 0x32, 0x17, 0xad,
	0x90, 0x05, 0x9c, 0xcc, 0xb8, 0x3c, 0x78, 0xfb, 0x1e, 0xee, 0xa5, 0xee, 0x1f, 0x3a, 0x0f, 0xfe,
	0x28, 0x48, 0x5a, 0x21, 0x4b, 0x20, 0x33, 0x2e, 0x0f, 0xdf, 0xb9, 0xd3, 0xbd, 0x7a, 0x07, 0xa7,
	0x8e, 0x53, 0x2c, 0xb8, 0xbf, 0x59, 0x5a, 0x21, 0x2f, 0xa1, 0x7b, 0x99, 0x6c, 0x98, 0xe4, 0x6a,
	0x72, 0xa3, 0xc3, 0xfb, 0x25, 0xf5, 0xd4, 0x22, 0x4a, 0x89, 0x79, 0x05, 0x77, 0xe7, 0x91, 0x90,
	0x2c, 0x32, 0xb5, 0x33, 0x54, 0xbd, 0x92, 0x2a, 0xa5, 0x15, 0x26, 0x70, 0x2f, 0xd5, 0xf8, 0x3f,
	0x96, 0xf0, 0x9a, 0xf8, 0xe7, 0x73, 0xfe, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x7e, 0x3d, 0x8e, 0xee,
	0x8c, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MasterClient is the client API for Master service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MasterClient interface {
	Heartbeat(ctx context.Context, in *MinionInfo, opts ...grpc.CallOption) (*Response, error)
	GetAllMinions(ctx context.Context, in *Query, opts ...grpc.CallOption) (*ListMinions, error)
	GetTablesByMinion(ctx context.Context, in *QueryTablesByMinion, opts ...grpc.CallOption) (*ListTableResponse, error)
	GetBackupsByMinion(ctx context.Context, in *QueryBackupsByMinion, opts ...grpc.CallOption) (*ListBackupResponse, error)
	UpdateInfoBackup(ctx context.Context, in *QueryBackupUnit, opts ...grpc.CallOption) (*Response, error)
	InstantBackupByMinion(ctx context.Context, in *QueryBackup, opts ...grpc.CallOption) (*Response, error)
	ScheduleBackupByMinion(ctx context.Context, in *QueryBackup, opts ...grpc.CallOption) (*Response, error)
}

type masterClient struct {
	cc *grpc.ClientConn
}

func NewMasterClient(cc *grpc.ClientConn) MasterClient {
	return &masterClient{cc}
}

func (c *masterClient) Heartbeat(ctx context.Context, in *MinionInfo, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/master.Master/Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) GetAllMinions(ctx context.Context, in *Query, opts ...grpc.CallOption) (*ListMinions, error) {
	out := new(ListMinions)
	err := c.cc.Invoke(ctx, "/master.Master/GetAllMinions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) GetTablesByMinion(ctx context.Context, in *QueryTablesByMinion, opts ...grpc.CallOption) (*ListTableResponse, error) {
	out := new(ListTableResponse)
	err := c.cc.Invoke(ctx, "/master.Master/GetTablesByMinion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) GetBackupsByMinion(ctx context.Context, in *QueryBackupsByMinion, opts ...grpc.CallOption) (*ListBackupResponse, error) {
	out := new(ListBackupResponse)
	err := c.cc.Invoke(ctx, "/master.Master/GetBackupsByMinion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) UpdateInfoBackup(ctx context.Context, in *QueryBackupUnit, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/master.Master/UpdateInfoBackup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) InstantBackupByMinion(ctx context.Context, in *QueryBackup, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/master.Master/InstantBackupByMinion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) ScheduleBackupByMinion(ctx context.Context, in *QueryBackup, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/master.Master/ScheduleBackupByMinion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MasterServer is the server API for Master service.
type MasterServer interface {
	Heartbeat(context.Context, *MinionInfo) (*Response, error)
	GetAllMinions(context.Context, *Query) (*ListMinions, error)
	GetTablesByMinion(context.Context, *QueryTablesByMinion) (*ListTableResponse, error)
	GetBackupsByMinion(context.Context, *QueryBackupsByMinion) (*ListBackupResponse, error)
	UpdateInfoBackup(context.Context, *QueryBackupUnit) (*Response, error)
	InstantBackupByMinion(context.Context, *QueryBackup) (*Response, error)
	ScheduleBackupByMinion(context.Context, *QueryBackup) (*Response, error)
}

func RegisterMasterServer(s *grpc.Server, srv MasterServer) {
	s.RegisterService(&_Master_serviceDesc, srv)
}

func _Master_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MinionInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/master.Master/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).Heartbeat(ctx, req.(*MinionInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_GetAllMinions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).GetAllMinions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/master.Master/GetAllMinions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).GetAllMinions(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_GetTablesByMinion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryTablesByMinion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).GetTablesByMinion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/master.Master/GetTablesByMinion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).GetTablesByMinion(ctx, req.(*QueryTablesByMinion))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_GetBackupsByMinion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryBackupsByMinion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).GetBackupsByMinion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/master.Master/GetBackupsByMinion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).GetBackupsByMinion(ctx, req.(*QueryBackupsByMinion))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_UpdateInfoBackup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryBackupUnit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).UpdateInfoBackup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/master.Master/UpdateInfoBackup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).UpdateInfoBackup(ctx, req.(*QueryBackupUnit))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_InstantBackupByMinion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryBackup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).InstantBackupByMinion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/master.Master/InstantBackupByMinion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).InstantBackupByMinion(ctx, req.(*QueryBackup))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_ScheduleBackupByMinion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryBackup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).ScheduleBackupByMinion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/master.Master/ScheduleBackupByMinion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).ScheduleBackupByMinion(ctx, req.(*QueryBackup))
	}
	return interceptor(ctx, in, info, handler)
}

var _Master_serviceDesc = grpc.ServiceDesc{
	ServiceName: "master.Master",
	HandlerType: (*MasterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Heartbeat",
			Handler:    _Master_Heartbeat_Handler,
		},
		{
			MethodName: "GetAllMinions",
			Handler:    _Master_GetAllMinions_Handler,
		},
		{
			MethodName: "GetTablesByMinion",
			Handler:    _Master_GetTablesByMinion_Handler,
		},
		{
			MethodName: "GetBackupsByMinion",
			Handler:    _Master_GetBackupsByMinion_Handler,
		},
		{
			MethodName: "UpdateInfoBackup",
			Handler:    _Master_UpdateInfoBackup_Handler,
		},
		{
			MethodName: "InstantBackupByMinion",
			Handler:    _Master_InstantBackupByMinion_Handler,
		},
		{
			MethodName: "ScheduleBackupByMinion",
			Handler:    _Master_ScheduleBackupByMinion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "master.proto",
}
